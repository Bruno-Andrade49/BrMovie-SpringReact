package com.brproj.bootcamp.projetospringreact.projetoSpringReact.services;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import com.brproj.bootcamp.projetospringreact.projetoSpringReact.Repository.MovieRepository;
import com.brproj.bootcamp.projetospringreact.projetoSpringReact.Repository.ScoreRepository;
import com.brproj.bootcamp.projetospringreact.projetoSpringReact.Repository.UserRepository;
import com.brproj.bootcamp.projetospringreact.projetoSpringReact.dto.ScoreDTO;
import com.brproj.bootcamp.projetospringreact.projetoSpringReact.entities.Movie;
import com.brproj.bootcamp.projetospringreact.projetoSpringReact.entities.Score;
import com.brproj.bootcamp.projetospringreact.projetoSpringReact.entities.User;

public class ScoreService {
	
	@Autowired
	private MovieRepository movieRepository;
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private ScoreRepository scoreRepository;

	@Transactional
	public void saveScore(ScoreDTO dto) {
		
		User usuario = userRepository.findByEmail(dto.getEmail());
		
		if(usuario == null) {
			usuario = new User();
			usuario.setEmail(dto.getEmail());
			usuario = userRepository.saveAndFlush(usuario);
		}
		
		Movie filme = movieRepository.findById(dto.getMovieId()).get();
		
		Score nota = new Score();
		nota.setMovie(filme);
		nota.setUser(usuario);
		nota.setValue(dto.getScore());
		nota = scoreRepository.saveAndFlush(nota);
		
		filme.setCount(filme.getCount()+1);
		
		
		double sum = 0.0;
		for (Score filmes: filme.getScores()) {
			sum += filmes.getValue();	
		}
		
		
	}
	
}
